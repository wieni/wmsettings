<?php

use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\wmsettings\Field\IndexableBaseFieldDefinition;

function wmsettings_requirements(string $phase)
{
    $requirements = [];

    try {
        \Drupal::entityDefinitionUpdateManager()
            ->getEntityType('settings');
    } catch (PluginNotFoundException $e) {
        $requirements['settings_entity_type'] = [
            'title' => t('Settings entity type'),
            'value' => t('Missing <code>settings</code> entity type'),
            'description' => t('The wmsettings module needs a <code>settings</code> entity type. You can use the <a href="@eckModuleUrl">eck module</a> or you can create a custom entity type.', [
                '@eckModuleUrl' => 'https://www.drupal.org/project/eck',
            ]),
            'severity' => REQUIREMENT_ERROR,
        ];
    }

    return $requirements;
}

function wmsettings_install()
{
    $entityType = \Drupal::entityDefinitionUpdateManager()
        ->getEntityType('settings');

    $fields = \Drupal::service('entity.last_installed_schema.repository')
        ->getLastInstalledFieldStorageDefinitions('settings');
    $fields += wmsettings_entity_base_field_info($entityType);

    \Drupal::entityDefinitionUpdateManager()
        ->updateFieldableEntityType($entityType, $fields);

    \Drupal::service('wmsettings.settings')
        ->checkAndCreateEntities();
}

/**
 * Add an index to the wmsettings_key base field
 */
function wmsettings_update_8001()
{
    $updateManager = \Drupal::entityDefinitionUpdateManager();
    $entityTypeManager = \Drupal::entityTypeManager();

    if (!$entityType = $entityTypeManager->getDefinition('settings')) {
        return;
    }

    if (!$storageDefinition = $updateManager->getFieldStorageDefinition('wmsettings_key', 'settings')) {
        return;
    }

    $newDefinition = IndexableBaseFieldDefinition::wrap($storageDefinition)
        ->addIndex('value');
    $updateManager->updateFieldStorageDefinition($newDefinition);
}
